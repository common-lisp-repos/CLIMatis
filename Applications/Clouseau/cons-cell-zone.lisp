(in-package #:clouseau)

(defclass cons-cell-zone (clim3:monochrome)
  ()
  (:default-initargs :hsprawl (clim3-sprawl:sprawl 55 65 65)
		     :vsprawl (clim3-sprawl:sprawl 35 45 45)))

(defmethod clim3-paint:new-paint ((zone cons-cell-zone))
  (let ((zone-width (clim3:width zone))
	(zone-height (clim3:height zone))
	(color (clim3:color zone)))
    (clim3:with-area (0 0 40 2)
      (clim3:paint-opaque color))
    (clim3:with-area (0 18 40 2)
      (clim3:paint-opaque color))
    (clim3:with-area (0 0 2 20)
      (clim3:paint-opaque color))
    (clim3:with-area (38 0 2 20)
      (clim3:paint-opaque color))
    (clim3:with-area (19 0 2 20)
      (clim3:paint-opaque color))
    (clim3:with-area (9 10 2 (- zone-height 10))
      (clim3:paint-opaque color))
    (clim3:with-area (30 9 (- zone-width 10) 2)
      (clim3:paint-opaque color))
    (clim3:with-area (7 (- zone-height 10) 6 10)
      (clim3:paint-trapezoids
       '((00d0 10d0 00d0 03d0 06d0 03d0))
       (clim3:color zone)))
    (clim3:with-area ((- zone-width 10) 7 10 6)
      (clim3:paint-trapezoids
       '((00d0 03d0 00d0 00d0 00d0 10d0)
	 (03d0 06d0 00d0 00d0 10d0 00d0))
       (clim3:color zone)))))


(defun cons-cell (color)
  (make-instance 'cons-cell-zone :color color))
